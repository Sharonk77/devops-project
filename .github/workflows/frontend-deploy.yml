name: Build and Deploy Health-Check Web

on:
  workflow_dispatch: # Manually triggered

jobs:
  health-check-web-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      TF_VAR_aws_account_id: ${{ secrets.AWS_ACCOUNT_ID }}
      TF_VAR_bucket_name: ${{ secrets.BUCKET_NAME }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: health-check-frontend/package-lock.json

      - name: Install Dependencies
        working-directory: health-check-frontend
        run: npm install

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        working-directory: tf-health-check-frontend
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TERRAFORM_BACKEND_BUCKET_NAME }}" \
            -backend-config="key=frontend/terraform.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="dynamodb_table=terraform-state-locking" \
            -backend-config="encrypt=true"

      - name: Get Load Balancer API URL from Terraform
        working-directory: tf-health-check-frontend
        run: |
          echo "Fetching Load Balancer API URL from Terraform..."
          LB_API=$(terraform output -raw lb_url 2>/dev/null)
          echo "LB_API=$LB_API" >> $GITHUB_ENV
          echo "Using Load Balancer URL: $LB_API"

      - name: Create `.env` File with API URL
        working-directory: health-check-frontend
        run: |
          echo "NEXT_PUBLIC_API_URL=${{ env.LB_API }}" > .env.local
          cat .env.local  # Debugging step to verify the variable

      - name: Run Build
        working-directory: health-check-frontend
        run: npm run build

      - name: Get CloudFront Distribution ID from Terraform
        working-directory: tf-health-check-frontend
        run: |
          echo "Fetching CloudFront Distribution ID from Terraform..."
          DISTRIBUTION_ID=$(terraform output -raw cloudfront_distribution_id 2>/dev/null)
          echo "::add-mask::$DISTRIBUTION_ID"
          echo "DISTRIBUTION_ID=$DISTRIBUTION_ID" >> $GITHUB_ENV
          echo "CloudFront Distribution ID: $DISTRIBUTION_ID"

      - name: Upload Web App to S3 & Invalidate CloudFront Cache
        working-directory: health-check-frontend
        run: |
          echo "Uploading files to S3..."
          aws s3 cp --recursive out/ s3://${{ secrets.BUCKET_NAME }}/

          echo "Invalidating CloudFront cache..."
          aws cloudfront create-invalidation \
            --distribution-id $DISTRIBUTION_ID \
            --paths "/*"

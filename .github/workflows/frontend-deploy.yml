name: build and deploy health-check web

on:
  workflow_dispatch: # currently only manually triggered

jobs:
  health-check-web-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: health-check-frontend/package-lock.json

      - name: Install dependencies
        working-directory: health-check-frontend
        run: npm install

      - name: Get load balancer api URL
        working-directory: tf-health-check-frontend
        run: |
          echo "Fetching load balancer api url from Terraform..."
          LB_API=$(terraform output -raw lb_url 2>/dev/null)
          echo "LB_API=$LB_API" >> $GITHUB_ENV

      - name: Create .env File
        working-directory: health-check-frontend
        run: |
          echo "NEXT_PUBLIC_API_URL=${{ secrets.LB_API }}" > .env

      - name: Run build
        working-directory: health-check-frontend
        run: npm run build

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        working-directory: tf-health-check-frontend
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TERRAFORM_BACKEND_BUCKET_NAME }}" \
            -backend-config="key="confs/import-bootstrap/terraform.tfstate"" \
            -backend-config="region=us-east-1" \
            -backend-config="dynamodb_table=terraform-state-locking" \
            -backend-config="encrypt=true"

      - name: Get CloudFront Distribution ID
        working-directory: tf-health-check-frontend
        run: |
          echo "Fetching CloudFront Distribution ID from Terraform..."
          DISTRIBUTION_ID=$(terraform output -raw cloudfront_distribution_id 2>/dev/null)
          echo "::add-mask::$DISTRIBUTION_ID"
          echo "DISTRIBUTION_ID=$DISTRIBUTION_ID" >> $GITHUB_ENV

      - name: Upload health-check web + invalidate cache
        working-directory: health-check-frontend
        run: |
          echo "Uploading files to S3..."
          aws s3 cp --recursive out/ s3://${{ secrets.BUCKET_NAME }}/
          
          echo "Invalidating CloudFront cache..."
          aws cloudfront create-invalidation \
            --distribution-id $DISTRIBUTION_ID \
            --paths "/*"
          


          
              
